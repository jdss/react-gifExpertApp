{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGift","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KA2B5C,OAEI,sBAAMC,SAlBW,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAYlB,SAEI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SA9Bc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,uBCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEL,mCAERC,EAJa,iDAImCC,UAAWH,GAJ9C,6BAEL,oCAFK,SAKAI,MAAMF,GALN,cAKbG,EALa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAEDC,EAAQD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAgBZM,GAhBY,4CAAH,sDCEPO,EAAc,SAAC,GAAW,IAAVL,EAAS,EAATA,IAEzB,OACI,sBAAKM,UAAU,yCAAf,UACA,4BAAIN,EAAIE,QACR,qBAAKK,IAAKP,EAAIR,IAAKgB,IAAKR,EAAIE,YCAvBO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECJb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAXCC,qBAAW,WACPxB,EAAQC,GACRwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACnBf,KAAMkB,EACNL,SAAS,SAEd,CAACpB,IAKGqB,EDDyBK,CAAa1B,GAAhCa,EAdwB,EAc9BN,KAd8B,EAchBa,QAMrB,OAEI,qCACA,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAIpD,qBAAKgB,UAAU,YAAf,SAIYH,EAAOJ,KAAK,SAAAC,GAER,OAAO,cAAC,EAAD,CAA2BA,IAAKA,GAAbA,EAAIC,aEpCzCgB,EAAe,WAAO,IAAD,EAGMzC,mBAAS,CAAC,cAHhB,mBAGvB0C,EAHuB,KAGX3C,EAHW,KAY9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAIA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAEZ,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCtB7C6B,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a858ed37.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setInputValue(e.target.value)\r\n\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [ inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <input \r\n                type='text'\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                />\r\n            \r\n            </form>\r\n\r\n \r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = { \r\n    setCategories: PropTypes.func.isRequired\r\n\r\n}\r\n","export const getGift = async (category) => {\r\n\r\n    const apiKey ='cZBt7YC8W0IBQCMwFXNhyQh01N3BbGsz';\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI( category)}&limit=10&api_key=${apiKey}`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs =  data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({img}) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n        <p>{img.title}</p> \r\n        <img src={img.url} alt={img.title}></img> \r\n       </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n//import { getGift } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setimages] = useState([])\r\n\r\n    // useEffect( () => {\r\n    //     getGift(category).\r\n    //     then(imgs => setimages(imgs)) ;\r\n    // },[category])\r\n\r\n\r\n   \r\n    //getGift();\r\n\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n        <h3 className='animate__animated animate__bounce'>{ category }</h3>\r\n\r\n\r\n\r\n        <div className='card-grid'>\r\n            \r\n\r\n            {\r\n                    images.map( img => {\r\n\r\n                        return <GifGridItem  key={img.id} img={img}></GifGridItem>\r\n                        // return  <div key={img.id}>\r\n                        //          <li>{img.title}</li> \r\n                        //          <img src={img.url}></img> \r\n                        //         </div>\r\n                    })\r\n            }\r\n\r\n                \r\n        </div>\r\n\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react'\r\nimport { getGift } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n\r\n     useEffect( () => {\r\n         getGift(category).\r\n         then(imgs => setstate({\r\n            data: imgs,\r\n            loading: false\r\n        })) ;\r\n     },[category])\r\n\r\n\r\n\r\n\r\n    return state\r\n}\r\n","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    //  const handleAdd = ()=> {\r\n\r\n    //      setCategories([...categories,'Overlord']);\r\n    //      setCategories( cats => [...cats, 'Overlord']);\r\n    //  }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories= { setCategories }></AddCategory>\r\n            <hr />\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => {\r\n                        //return <li key={category}> {category} </li>\r\n                        return <GifGrid key={category} category={category} ></GifGrid>\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}